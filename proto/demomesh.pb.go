// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demomesh.proto

package demomesh

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BackendReply struct {
	Params *BackendParams     `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	Error  *BackendReplyError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// An original URL that was used to query this Backend.
	UrlRequested         string          `protobuf:"bytes,3,opt,name=urlRequested,proto3" json:"urlRequested,omitempty"`
	Backends             []*BackendReply `protobuf:"bytes,4,rep,name=backends,proto3" json:"backends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BackendReply) Reset()         { *m = BackendReply{} }
func (m *BackendReply) String() string { return proto.CompactTextString(m) }
func (*BackendReply) ProtoMessage()    {}
func (*BackendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_895a88dcb64f7d09, []int{0}
}

func (m *BackendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendReply.Unmarshal(m, b)
}
func (m *BackendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendReply.Marshal(b, m, deterministic)
}
func (m *BackendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendReply.Merge(m, src)
}
func (m *BackendReply) XXX_Size() int {
	return xxx_messageInfo_BackendReply.Size(m)
}
func (m *BackendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendReply.DiscardUnknown(m)
}

var xxx_messageInfo_BackendReply proto.InternalMessageInfo

func (m *BackendReply) GetParams() *BackendParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *BackendReply) GetError() *BackendReplyError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *BackendReply) GetUrlRequested() string {
	if m != nil {
		return m.UrlRequested
	}
	return ""
}

func (m *BackendReply) GetBackends() []*BackendReply {
	if m != nil {
		return m.Backends
	}
	return nil
}

// Parameters of the service as configured on the backend.
type BackendParams struct {
	// Name of the service as configured on this backend.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Port backend is configured to serve on.
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// An hostname of the host service runs on.
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackendParams) Reset()         { *m = BackendParams{} }
func (m *BackendParams) String() string { return proto.CompactTextString(m) }
func (*BackendParams) ProtoMessage()    {}
func (*BackendParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_895a88dcb64f7d09, []int{1}
}

func (m *BackendParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendParams.Unmarshal(m, b)
}
func (m *BackendParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendParams.Marshal(b, m, deterministic)
}
func (m *BackendParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendParams.Merge(m, src)
}
func (m *BackendParams) XXX_Size() int {
	return xxx_messageInfo_BackendParams.Size(m)
}
func (m *BackendParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendParams.DiscardUnknown(m)
}

var xxx_messageInfo_BackendParams proto.InternalMessageInfo

func (m *BackendParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BackendParams) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *BackendParams) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type BackendReplyError struct {
	IsError              bool     `protobuf:"varint,1,opt,name=isError,proto3" json:"isError,omitempty"`
	ErrorString          string   `protobuf:"bytes,2,opt,name=errorString,proto3" json:"errorString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackendReplyError) Reset()         { *m = BackendReplyError{} }
func (m *BackendReplyError) String() string { return proto.CompactTextString(m) }
func (*BackendReplyError) ProtoMessage()    {}
func (*BackendReplyError) Descriptor() ([]byte, []int) {
	return fileDescriptor_895a88dcb64f7d09, []int{2}
}

func (m *BackendReplyError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendReplyError.Unmarshal(m, b)
}
func (m *BackendReplyError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendReplyError.Marshal(b, m, deterministic)
}
func (m *BackendReplyError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendReplyError.Merge(m, src)
}
func (m *BackendReplyError) XXX_Size() int {
	return xxx_messageInfo_BackendReplyError.Size(m)
}
func (m *BackendReplyError) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendReplyError.DiscardUnknown(m)
}

var xxx_messageInfo_BackendReplyError proto.InternalMessageInfo

func (m *BackendReplyError) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *BackendReplyError) GetErrorString() string {
	if m != nil {
		return m.ErrorString
	}
	return ""
}

type BackendRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackendRequest) Reset()         { *m = BackendRequest{} }
func (m *BackendRequest) String() string { return proto.CompactTextString(m) }
func (*BackendRequest) ProtoMessage()    {}
func (*BackendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_895a88dcb64f7d09, []int{3}
}

func (m *BackendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendRequest.Unmarshal(m, b)
}
func (m *BackendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendRequest.Marshal(b, m, deterministic)
}
func (m *BackendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendRequest.Merge(m, src)
}
func (m *BackendRequest) XXX_Size() int {
	return xxx_messageInfo_BackendRequest.Size(m)
}
func (m *BackendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackendRequest proto.InternalMessageInfo

func (m *BackendRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*BackendReply)(nil), "demomesh.BackendReply")
	proto.RegisterType((*BackendParams)(nil), "demomesh.BackendParams")
	proto.RegisterType((*BackendReplyError)(nil), "demomesh.BackendReplyError")
	proto.RegisterType((*BackendRequest)(nil), "demomesh.BackendRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemomeshServiceClient is the client API for DemomeshService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemomeshServiceClient interface {
	GetBackendInfo(ctx context.Context, in *BackendRequest, opts ...grpc.CallOption) (*BackendReply, error)
}

type demomeshServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemomeshServiceClient(cc *grpc.ClientConn) DemomeshServiceClient {
	return &demomeshServiceClient{cc}
}

func (c *demomeshServiceClient) GetBackendInfo(ctx context.Context, in *BackendRequest, opts ...grpc.CallOption) (*BackendReply, error) {
	out := new(BackendReply)
	err := c.cc.Invoke(ctx, "/demomesh.DemomeshService/GetBackendInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemomeshServiceServer is the server API for DemomeshService service.
type DemomeshServiceServer interface {
	GetBackendInfo(context.Context, *BackendRequest) (*BackendReply, error)
}

func RegisterDemomeshServiceServer(s *grpc.Server, srv DemomeshServiceServer) {
	s.RegisterService(&_DemomeshService_serviceDesc, srv)
}

func _DemomeshService_GetBackendInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemomeshServiceServer).GetBackendInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demomesh.DemomeshService/GetBackendInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemomeshServiceServer).GetBackendInfo(ctx, req.(*BackendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemomeshService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demomesh.DemomeshService",
	HandlerType: (*DemomeshServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBackendInfo",
			Handler:    _DemomeshService_GetBackendInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demomesh.proto",
}

func init() { proto.RegisterFile("demomesh.proto", fileDescriptor_895a88dcb64f7d09) }

var fileDescriptor_895a88dcb64f7d09 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcf, 0x4e, 0x83, 0x40,
	0x10, 0xc6, 0xa5, 0xff, 0xa4, 0x43, 0xc5, 0x38, 0x07, 0xdd, 0xd4, 0x0b, 0xd9, 0x13, 0xa7, 0x1a,
	0xf1, 0x0d, 0x4c, 0x8d, 0xf1, 0xa4, 0x59, 0x0e, 0x9e, 0x69, 0x19, 0x2d, 0xb1, 0xb0, 0xb8, 0xbb,
	0x35, 0xf1, 0x15, 0x7d, 0x2a, 0xd3, 0x81, 0x12, 0x9b, 0xd6, 0xdb, 0xcc, 0xf0, 0x9b, 0x8f, 0xef,
	0x9b, 0x85, 0x30, 0xa7, 0x52, 0x97, 0x64, 0x57, 0xb3, 0xda, 0x68, 0xa7, 0xd1, 0xdf, 0xf5, 0xf2,
	0xc7, 0x83, 0xc9, 0x7d, 0xb6, 0xfc, 0xa0, 0x2a, 0x57, 0x54, 0xaf, 0xbf, 0xf1, 0x06, 0x46, 0x75,
	0x66, 0xb2, 0xd2, 0x0a, 0x2f, 0xf2, 0xe2, 0x20, 0xb9, 0x9a, 0x75, 0xbb, 0x2d, 0xf7, 0xc2, 0x9f,
	0x55, 0x8b, 0xe1, 0x2d, 0x0c, 0xc9, 0x18, 0x6d, 0x44, 0x8f, 0xf9, 0xeb, 0x03, 0x9e, 0x75, 0x1f,
	0xb6, 0x88, 0x6a, 0x48, 0x94, 0x30, 0xd9, 0x98, 0xb5, 0xa2, 0xcf, 0x0d, 0x59, 0x47, 0xb9, 0xe8,
	0x47, 0x5e, 0x3c, 0x56, 0x7b, 0x33, 0x4c, 0xc0, 0x5f, 0x34, 0xfb, 0x56, 0x0c, 0xa2, 0x7e, 0x1c,
	0x24, 0x97, 0xc7, 0x95, 0x55, 0xc7, 0xc9, 0x14, 0xce, 0xf6, 0x3c, 0x22, 0xc2, 0xa0, 0xca, 0x4a,
	0xe2, 0x28, 0x63, 0xc5, 0xf5, 0x76, 0x56, 0x6b, 0xe3, 0xd8, 0xee, 0x50, 0x71, 0x8d, 0x53, 0xf0,
	0x57, 0xda, 0x3a, 0x66, 0x1b, 0x33, 0x5d, 0x2f, 0x9f, 0xe1, 0xe2, 0x20, 0x08, 0x0a, 0x38, 0x2d,
	0x2c, 0x97, 0xac, 0xed, 0xab, 0x5d, 0x8b, 0x11, 0x04, 0x1c, 0x32, 0x75, 0xa6, 0xa8, 0xde, 0xf9,
	0x2f, 0x63, 0xf5, 0x77, 0x24, 0x23, 0x08, 0x3b, 0x41, 0x4e, 0x8b, 0x21, 0xf4, 0x8a, 0x9c, 0x85,
	0x86, 0xaa, 0x57, 0xe4, 0xc9, 0x2b, 0x9c, 0xcf, 0xdb, 0xa8, 0x29, 0x99, 0xaf, 0x62, 0x49, 0x38,
	0x87, 0xf0, 0x91, 0x5c, 0xbb, 0xf7, 0x54, 0xbd, 0x69, 0x14, 0x47, 0xce, 0xc1, 0x72, 0xd3, 0x7f,
	0x0e, 0x25, 0x4f, 0x16, 0x23, 0x7e, 0xfe, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0x5a,
	0xef, 0x45, 0x10, 0x02, 0x00, 0x00,
}
